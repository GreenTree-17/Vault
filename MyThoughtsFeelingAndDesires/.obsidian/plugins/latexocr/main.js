/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => Latexocr
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var { spawn } = require("child_process");
var DEFAULT_SETTINGS = {
  statusBarVisible: true
};
var Latexocr = class extends import_obsidian.Plugin {
  async onload() {
    await this.loadSettings();
    if (this.settings.statusBarVisible) {
      this.statusBarTextElement = this.addStatusBarItem();
      this.statusBarTextElement.setText("latexocr not running");
    }
    this.numWindows = 0;
    this.addCommand({
      id: "run_latexocr",
      name: "Run latexocr",
      callback: () => {
        this.run_latexocr();
      }
    });
    this.addRibbonIcon("braces", "latexocr", () => {
      this.run_latexocr();
    });
    this.addSettingTab(new SettingsTab(this.app, this));
  }
  onunload() {
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
  async run_latexocr() {
    const latexocr_process = spawn("latexocr");
    new import_obsidian.Notice("latexocr running");
    this.numWindows += 1;
    this.setStatusBarText();
    latexocr_process.on("close", () => {
      new import_obsidian.Notice(`latexocr closed`);
      this.numWindows -= 1;
      this.setStatusBarText();
    });
  }
  async setStatusBarText() {
    let statusBarText = "";
    if (this.settings.statusBarVisible) {
      if (this.numWindows > 0) {
        statusBarText = "latexocr running";
      } else {
        statusBarText = "latexocr not running";
      }
      this.statusBarTextElement.setText(statusBarText);
    } else {
      this.statusBarTextElement.setText("");
    }
  }
};
var SettingsTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    new import_obsidian.Setting(containerEl).setName("Show status in status bar").setDesc("Controls whether latexocr running status is shown in the Obsidian status bar").addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.statusBarVisible).onChange(async (value) => {
        this.plugin.settings.statusBarVisible = value;
        this.plugin.setStatusBarText();
        await this.plugin.saveSettings();
      })
    );
  }
};


/* nosourcemap */